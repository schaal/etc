source /etc/zsh/zsh_plugins.sh

SPACESHIP_PROMPT_ORDER=( user dir host git venv jobs line_sep exit_code char )
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_CHAR_SYMBOL="â–¶ "

setopt histignorealldups sharehistory

setopt HIST_IGNORE_SPACE

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history

autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

alias ls="ls --color"

if type journalctl > /dev/null; then
    alias jc="journalctl"
    alias jce="journalctl --pager-end"

    for level in {0..7}
    do
        alias jce$level="journalctl --pager-end --priority=$level"
    done

    alias sc="systemctl"

    if type mosh > /dev/null; then
        alias systemd-mosh='mosh --server="systemd-run --user --scope mosh-server"'
    fi
fi

alias u="cd .."
alias uu="cd .. && cd .."

if type tmux > /dev/null; then
    alias tmux="tmux -2"
fi

if type eatmydata > /dev/null; then
    alias -g e="eatmydata"
fi

if [[ "$SHOW_NEW" -eq 0 ]]
then
    alias up="sudo ${UNSAFE_IO:+eatmydata} sh -c \"apt update && apt upgrade\""
else
    alias up="sudo ${UNSAFE_IO:+eatmydata} sh -c \"apt update && apt upgrade && aptitude search '?new ?not(?architecture(foreign)) ?not(dbgsym$)' && aptitude forget-new\""
fi

